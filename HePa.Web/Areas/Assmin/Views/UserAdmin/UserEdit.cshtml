@model HePa.Core.Entities.ApplicationUser
@using HePa.Core.Extensions;

@{
    ViewBag.Title = "UserEdit";
    Layout = "~/Views/Shared/_SimplePageLayout.cshtml";
}
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<h2>UserEdit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ApplicationUser</h4>
        <hr />
        <div class="boxed">
            <div class="inner">
                @Html.ValidationSummary(true)
                @Html.AlertBox(AlertBoxType.SUCCESS, ViewBag.SuccessMessage as String)
                @Html.AlertBox(AlertBoxType.DANGER, ViewBag.EditUserError as String)

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email)
                        @Html.ValidationMessageFor(model => model.Email)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Role, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Role)
                        @Html.ValidationMessageFor(model => model.Role)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsVerified, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IsVerified)
                        @Html.ValidationMessageFor(model => model.IsVerified)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.IsBlocked, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IsBlocked)
                        @Html.ValidationMessageFor(model => model.IsBlocked)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.IsPaid, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IsPaid)
                        @Html.ValidationMessageFor(model => model.IsPaid)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsBanned, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IsBanned)
                        @Html.ValidationMessageFor(model => model.IsBanned)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name)
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BirthDay, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BirthDay)
                        @Html.ValidationMessageFor(model => model.BirthDay)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Job, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Job)
                        @Html.ValidationMessageFor(model => model.Job)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Place, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Place)
                        @Html.ValidationMessageFor(model => model.Place)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Avatar, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Avatar)
                        @Html.ValidationMessageFor(model => model.Avatar)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DisplayName, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DisplayName)
                        @Html.ValidationMessageFor(model => model.DisplayName)
                    </div>
                </div>
                @*<div class="form-group">
                    @Html.LabelFor(model => model.CreatedDate, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CreatedDate)
                        @Html.ValidationMessageFor(model => model.CreatedDate)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LastActive, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastActive)
                        @Html.ValidationMessageFor(model => model.LastActive)
                    </div>
                </div>*@
                @*<div class="form-group">
                    @Html.LabelFor(model => model.Language, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Language)
                        @Html.ValidationMessageFor(model => model.Language)
                    </div>
                </div>*@
                @*<div class="form-group">
                    @Html.LabelFor(model => model.EmailConfirmed, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmailConfirmed)
                        @Html.ValidationMessageFor(model => model.EmailConfirmed)
                    </div>
                </div>*@
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.LockoutEnabled)
                @Html.HiddenFor(model => model.LockoutEndDateUtc)
                @Html.HiddenFor(model => model.PasswordHash)
                @Html.HiddenFor(model => model.SecurityStamp)
                @Html.HiddenFor(model => model.TwoFactorEnabled)
                @Html.HiddenFor(model => model.AccessFailedCount)
                <div class="form-group">
                    @Html.HiddenFor(model => model.UserName, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.UserName)
                        @Html.ValidationMessageFor(model => model.UserName)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "UserList")
</div>

@section AddScript {
    @Scripts.Render("~/dist/jquery-ui-js")
    <script>
        $().ready(function () {
            $("#BirthDay").datepicker({
                changeMonth: true,
                changeYear: true
            });
        });
    </script>
}