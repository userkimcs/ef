@model HePa.Web.Areas.Admin.ViewModels.GrammarAdminViewModel.AddGrammarViewModel

@{
    ViewBag.Title = "AddGrammar";
    Layout = "~/Views/Shared/_SimplePageLayout.cshtml";
}

<h2>AddGrammar</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>GrammarArticle</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Article.ParentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="list-grammar-parents" onchange="UpdateHiddenParent()">
                    <!--Default value-->
                    <option value="0">Default</option>
                    @foreach (var item in Model.GrammarParents)
                    {
                        <option value=@item.Id>@item.Title</option>
                    }
                </select>
            </div>
        </div>
        @Html.HiddenFor(model => model.Article.ParentId, new { id = "grammar-parent-id" })
        <div class="form-group">
            @Html.LabelFor(model => model.Article.TitleInVietnamese, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Article.TitleInVietnamese, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Article.TitleInVietnamese, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Article.TitleInEnglish, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Article.TitleInEnglish, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Article.TitleInEnglish, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Article.Alias, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Article.Alias, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Article.Alias, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Article.TextInVietnamese, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Article.TextInVietnamese, new { id = "ckVietnamese", @class = "form-control ckeditor" })
                @Html.ValidationMessageFor(model => model.Article.TextInVietnamese, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Article.TextInEnglish, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Article.TextInEnglish, new { id = "ckEnglish", @class = "form-control ckeditor" })
                @Html.ValidationMessageFor(model => model.Article.TextInEnglish, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Article.IsLeaf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Article.IsLeaf)
                    @Html.ValidationMessageFor(model => model.Article.IsLeaf, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section AddScript {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="//cdn.ckeditor.com/4.5.4/basic/ckeditor.js">
        // CKEDITOR.replace("ckVietnamese");
        // CKEDITOR.replace("ckEnglish");
    </script>

    <script>
        function UpdateHiddenParent ()
        {
            var e = document.getElementById("list-grammar-parents");
            var id = e.options[e.selectedIndex].value;
            $("#grammar-parent-id").val(id);
        }
    </script>
}
