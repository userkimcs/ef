@model HePa.Web.ViewModels.AccountViewModels.ChangePasswordViewModel
@using HePa.Core.Extensions;
@{
    ViewBag.Title = "Đổi mật khẩu";
    ViewBag.NavTitle = "Đổi mật khẩu";
    Layout = "~/Views/Shared/_SimplePageLayout.cshtml";
}

<div class="row">
    <div class="col-sm-8 col-sm-offset-2">
        <div class="content">
            <div class="simple-content boxed">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <h4>Bạn muốn đổi mật khẩu?</h4>
                    <div class="form-group">
                        <p>
                            Nhập vào mật khẩu hiện tại của bạn và mật khẩu mới để đổi mật khẩu. Nên tránh dùng tên, ngày sinh và những mật khẩu dễ
                            đoán để tài khoản của bạn được bảo mật hơn.
                        </p>
                    </div>
                    @Html.ValidationSummary(true)
                    @Html.AlertBox(AlertBoxType.SUCCESS, @ViewBag.SuccessfulMessage as String)
                    @Html.AlertBox(AlertBoxType.DANGER, @ViewBag.FailureMessage as String)
                    <div class="form-group">
                        @Html.EditorFor(model => model.CurrentPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Mật khẩu hiện tại" } })
                        <br />
                        @Html.ValidationMessageFor(model => model.CurrentPassword, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Mật khẩu mới" } })
                        <br />
                        @Html.ValidationMessageFor(model => model.NewPassword, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.EditorFor(model => model.ConfirmNewPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Xác nhận mật khẩu mới" } })
                        <br />
                        @Html.ValidationMessageFor(model => model.ConfirmNewPassword, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <a class="btn btn-blue" href="@Url.Action("Index", "Account")"><i class="fa fa-arrow-left"></i></a>
                        @*@Html.ActionLink("Back to List", "Index", new { htmlAttributes = new { @class = "btn fa fa-arrow-left" } })*@
                        <input type="submit" value="Đổi mật khẩu" class="btn btn-default" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section AddScript {
    <script src="@Scripts.Url("~/dist/jqueryval")" async></script>
    <script src="@Scripts.Url("~/dist/jquery.validate.unobtrusive")" async></script>
}