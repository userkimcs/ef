@model HePa.Web.ViewModels.AccountViewModels.ExternalRegisterViewModel
@{
    ViewBag.Title = "Xác nhận thông tin";
    ViewBag.NavTitle = "Xác nhận thông tin";
    Layout = "~/Views/Shared/_SimplePageLayout.cshtml";
}

<div class="row">
    <div class="col-sm-8 col-sm-offset-2">
        <div class="content">
            <div class="simple-content boxed">
                @using (Html.BeginForm(new { n = 1 }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        <h4>Xác nhận thông tin</h4>
                        <p>
                            Thật tuyệt, bạn vừa đăng nhập bằng tài khoản @Model.Provider. Giờ bạn chỉ cần xác nhận tên hiển thị của mình là mọi thứ sẽ hoàn tất.
                        </p>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.DisplayName, "Tên hiển thị", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @readonly = true } )
                                @*@Html.HiddenFor(model => model.Email)*@
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group hidden">
                            @Html.LabelFor(model => model.Provider, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Provider, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Provider, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Hoàn tất" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section AddScript {
    <script src="@Scripts.Url("~/dist/jqueryval")" async></script>
    <script src="@Scripts.Url("~/dist/jquery.validate.unobtrusive")" async></script>
}